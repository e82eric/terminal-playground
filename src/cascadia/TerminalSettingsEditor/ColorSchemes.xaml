<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
the MIT License. See LICENSE in the project root for license information. -->
<Page
    x:Class="Microsoft.Terminal.Settings.Editor.ColorSchemes"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.Terminal.Settings.Editor"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CommonResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Thickness x:Key="ColorSchemesStandardControlMargin">10,0,0,20</Thickness>
            
            <Style x:Key="ColorStackPanelStyle" TargetType="StackPanel">
                <Setter Property="Margin" Value="{StaticResource ColorSchemesStandardControlMargin}"/>
                <Setter Property="Height" Value="59"/>
            </Style>

            <Style x:Key="ColorHeaderStyle" TargetType="TextBlock">
                <Setter Property="Margin" Value="0,0,0,4"/>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
                <Setter Property="BorderBrush" Value="{StaticResource SystemBaseLowColor}"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="100"/>
            </Style>

            <Style TargetType="ColorPicker">
                <Setter Property="IsColorSliderVisible" Value="False"/>
                <Setter Property="IsColorChannelTextInputVisible" Value="False"/>
                <Setter Property="IsHexInputVisible" Value="True"/>
                <Setter Property="IsAlphaSliderVisible" Value="True"/>
                <Setter Property="IsAlphaTextInputVisible" Value="True"/>
            </Style>

            <local:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
            <local:ColorToHexConverter x:Key="ColorToHexConverter"/>
        </ResourceDictionary>
    </Page.Resources>

    <ScrollViewer>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" MaxWidth="480"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <!--Select a color scheme-->
            <ComboBox x:Name="ColorSchemeComboBox"
                      Grid.Row="0"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      SelectedIndex="0"
                      ItemsSource="{x:Bind ColorSchemeList, Mode=OneWay}"
                      SelectionChanged="ColorSchemeSelectionChanged"
                      Style="{StaticResource ComboBoxSettingStyle}"
                      Margin="{StaticResource ColorSchemesStandardControlMargin}"/>

            <!-- Color Table -->
            <ItemsControl x:Name="ColorTableControl"
                          ItemsSource="{x:Bind CurrentColorTable, Mode=OneWay}"
                          Grid.Row="1"
                          Grid.Column="0">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid Orientation="Horizontal"
                                       MaximumRowsOrColumns="4"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="local:ColorTableEntry">
                        <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                            <TextBlock Text="{x:Bind Name, Mode=OneWay}"
                                       Style="{StaticResource ColorHeaderStyle}"/>
                            <Button Background="{x:Bind Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                                <Button.Flyout>
                                    <Flyout>
                                        <ColorPicker Tag="{x:Bind Index, Mode=OneWay}"
                                                     Color="{x:Bind Color, Mode=OneWay}"
                                                     ColorChanged="ColorPickerChanged"/>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Additional Colors -->
            <ItemsControl Grid.Row="2"
                          Grid.Column="1">
                <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                    <TextBlock x:Uid="ColorScheme_Foreground"
                               Style="{StaticResource ColorHeaderStyle}"/>
                    <Button Background="{Binding Color, ElementName=ForegroundPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="ForegroundPicker" Color="{x:Bind CurrentColorScheme.Foreground, Mode=TwoWay}"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                    <TextBlock x:Uid="ColorScheme_Background"
                               Style="{StaticResource ColorHeaderStyle}"/>
                    <Button Background="{Binding Color, ElementName=BackgroundPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="BackgroundPicker"
                                             Color="{x:Bind CurrentColorScheme.Background, Mode=TwoWay}"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                    <TextBlock x:Uid="ColorScheme_CursorColor"
                               Style="{StaticResource ColorHeaderStyle}"/>
                    <Button Background="{Binding Color, ElementName=CursorColorPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="CursorColorPicker"
                                             Color="{x:Bind CurrentColorScheme.CursorColor, Mode=TwoWay}"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                    <TextBlock x:Uid="ColorScheme_SelectionBackground"
                               Style="{StaticResource ColorHeaderStyle}"/>
                    <Button Background="{Binding Color, ElementName=SelectionBackgroundPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="SelectionBackgroundPicker"
                                             Color="{x:Bind CurrentColorScheme.SelectionBackground, Mode=TwoWay}"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
            </ItemsControl>
        </Grid>
    </ScrollViewer>
</Page>
