// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

namespace Microsoft.Terminal.Core
{
    // TerminalCore declares its own Color struct to avoid depending
    // on Windows.UI.Color and to avoid passing around unclothed uint32s.
    // It is supported by til::color for conversions in and out of WinRT land.
    struct Color
    {
        UInt8 R;
        UInt8 G;
        UInt8 B;
        UInt8 A;
    };

    declare
    {
        // Forward declare this parameterized specialization so that it lives
        // in TerminalCore instead of being flung to the winds of all IDL dependents.
        interface Windows.Foundation.IReference<Microsoft.Terminal.Core.Color>;
    }

    enum CursorStyle
    {
        Vintage,
        Bar,
        Underscore,
        DoubleUnderscore,
        FilledBox,
        EmptyBox
    };

    interface ICoreSettings
    {
        Microsoft.Terminal.Core.Color DefaultForeground;
        Microsoft.Terminal.Core.Color DefaultBackground;
        Microsoft.Terminal.Core.Color GetColorTableEntry(Int32 index);
        // TODO:MSFT:20642297 - define a sentinel for Infinite Scrollback
        Int32 HistorySize;
        Int32 InitialRows;
        Int32 InitialCols;

        Boolean SnapOnInput;
        Boolean AltGrAliasing;

        Microsoft.Terminal.Core.Color CursorColor;
        CursorStyle CursorShape;
        UInt32 CursorHeight;
        String StartingTitle;
        Boolean SuppressApplicationTitle;
        String WordDelimiters;

        Boolean ForceVTInput;

        Windows.Foundation.IReference<Microsoft.Terminal.Core.Color> TabColor;
        Windows.Foundation.IReference<Microsoft.Terminal.Core.Color> StartingTabColor;
    };

}
